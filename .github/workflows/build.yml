# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build
on:
  push:
    branches:
      - master
jobs:
  manylinux:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache .a files
        id: build-cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}
          path: |
            src/rocksdb/libsnappy.a
            src/rocksdb/liblz4.a
            src/rocksdb/libbz2.a
            src/rocksdb/libzstd.a
            src/rocksdb/libz.a
            src/rocksdb/librocksdb.a
      - name: Install requirements
        run: sudo apt-get install build-essential binutils cmake python3-cffi
      - name: Make static library files
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: make clean && make
      - name: Build wheels
        run: /bin/bash scripts/build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/
      - name: Install twine
        run: python -m pip install twine
      - name: Publishing to pypi        
        run: twine upload --skip-existing --disable-progress-bar dist/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  macos:
    strategy:
      fail-fast: true
      matrix:
        python:
          - 3.7
          - 3.8
          - 3.9
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache .a files
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}
          path: |
            src/rocksdb/libsnappy.a
            src/rocksdb/liblz4.a
            src/rocksdb/libbz2.a
            src/rocksdb/libzstd.a
            src/rocksdb/libz.a
            src/rocksdb/librocksdb.a
      - name: Setup python${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python }}"
      - name: Make static library files
        run: make clean && make
      - name: Install requires
        run: python -m pip install cython twine wheel
      - name: Build wheel
        run: python setup.py bdist_wheel
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/
      - name: Publishing to pypi        
        run: twine upload --skip-existing --disable-progress-bar dist/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
